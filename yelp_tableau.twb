<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0415.1018                               -->
<workbook original-version='18.1' source-build='2025.1.1 (20251.25.0415.1018)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='yelp_academic_dataset_business' inline='true' name='federated.1t98oyw1pjvaki15sbs4k0qswgn4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yelp_academic_dataset_business' name='semistructpassivestore-direct.0qdy3qt11sz31e1cts8dd0oga7nt'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/maxim/Documents/Neue_Fische/yelp/yelp_user_reviews/data' filename='yelp_academic_dataset_business.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[yelp_academic_dataset_business.json]'>
                  <map key='attributes' value='false' />
                  <map key='hours' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0qdy3qt11sz31e1cts8dd0oga7nt' name='yelp_academic_dataset_business.json' table='[yelp_academic_dataset_business.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>address</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>business_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>categories</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[is_open]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>is_open</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>review_count</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>stars</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='yelp_academic_dataset_business.json' datatype='table' name='[__tableau_internal_object_id__].[yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>business_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>categories</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Open' datatype='real' name='[is_open]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>is_open</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>postal_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Review Count' datatype='real' name='[review_count]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>review_count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>stars</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>state</run>
          </formatted-text>
        </desc>
      </column>
      <folders-common>
        <folder name='Yelp Academic Dataset Business'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[address]' type='field' />
          <folder-item name='[business_id]' type='field' />
          <folder-item name='[categories]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[postal_code]' type='field' />
          <folder-item name='[state]' type='field' />
        </folder>
      </folders-common>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='yelp_academic_dataset_business.json' id='yelp_academic_dataset_business.json_5DC3E16B2B684729BEC3D597067D8F47'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0qdy3qt11sz31e1cts8dd0oga7nt' name='yelp_academic_dataset_business.json' table='[yelp_academic_dataset_business.json]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='yelp_academic_dataset_business (2)' inline='true' name='federated.14zut8l16rbtr21bqsz5x0jdjm1o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='yelp_academic_dataset_business' name='semistructpassivestore-direct.0jwkuux1uwgpqp1djdej20epsg5w'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/maxim/Documents/Neue_Fische/yelp/yelp_user_reviews/data' filename='yelp_academic_dataset_business.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[yelp_academic_dataset_business.json]'>
                  <map key='attributes' value='false' />
                  <map key='hours' value='false' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.0jwkuux1uwgpqp1djdej20epsg5w' name='yelp_academic_dataset_business.json' table='[yelp_academic_dataset_business.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[address]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>address</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>business_id</remote-name>
            <remote-type>130</remote-type>
            <local-name>[business_id]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>business_id</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>categories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[categories]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>categories</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[is_open]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>is_open</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>postal_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[postal_code]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>postal_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_count]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>review_count</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stars</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stars]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>stars</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[yelp_academic_dataset_business.json]</parent-name>
            <remote-alias>state</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='yelp_academic_dataset_business.json' datatype='table' name='[__tableau_internal_object_id__].[yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2]' role='measure' type='quantitative' />
      <column caption='Address' datatype='string' name='[address]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>address</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Business Id' datatype='string' name='[business_id]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>business_id</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Categories' datatype='string' name='[categories]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>categories</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Is Open' datatype='real' name='[is_open]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>is_open</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Postal Code' datatype='string' name='[postal_code]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>postal_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Review Count' datatype='real' name='[review_count]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>review_count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Stars' datatype='real' name='[stars]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>stars</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>state</run>
          </formatted-text>
        </desc>
      </column>
      <drill-paths>
        <drill-path name='State, City'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <folders-common>
        <folder name='Yelp Academic Dataset Business'>
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[address]' type='field' />
          <folder-item name='[business_id]' type='field' />
          <folder-item name='[categories]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[name]' type='field' />
          <folder-item name='[postal_code]' type='field' />
          <folder-item name='[state]' type='field' />
        </folder>
      </folders-common>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='yelp_academic_dataset_business.json' id='yelp_academic_dataset_business.json_EEA3839EB48D442EAED8ADF68D20A6C2'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.0jwkuux1uwgpqp1djdej20epsg5w' name='yelp_academic_dataset_business.json' table='[yelp_academic_dataset_business.json]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='yelp_academic_dataset_business (2)' name='federated.14zut8l16rbtr21bqsz5x0jdjm1o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14zut8l16rbtr21bqsz5x0jdjm1o'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>city</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>latitude</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>longitude</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>state</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:longitude:qk]' field-type='quantitative' max='-12546164.390515091' min='-12706798.894363411' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:latitude:qk]' field-type='quantitative' max='7124811.8675158033' min='7034119.4664297029' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <size column='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:city:nk]' />
              <text column='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:state:nk]' />
              <geometry column='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:latitude:qk]</rows>
        <cols>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{D82A0A08-C31B-4413-B7AF-4F2DCEFF4372}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='yelp_academic_dataset_business (2)' name='federated.14zut8l16rbtr21bqsz5x0jdjm1o' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.14zut8l16rbtr21bqsz5x0jdjm1o'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <desc>
                <formatted-text>
                  <run>city</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>latitude</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>longitude</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:longitude:qk]' field-type='quantitative' max='-8327005.6471255645' min='-8450089.3607810996' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:latitude:qk]' field-type='quantitative' max='4877428.1824719077' min='4813072.1709166151' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:latitude:qk]</rows>
        <cols>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{78FECD7B-1201-4D10-B89B-93DFCC860FCD}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='6' param='[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:city:nk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:city:nk]</field>
            <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:latitude:qk]</field>
            <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:longitude:qk]</field>
            <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:state:nk]</field>
            <field>[federated.1t98oyw1pjvaki15sbs4k0qswgn4].[none:postal_code:nk]</field>
            <field>[federated.1t98oyw1pjvaki15sbs4k0qswgn4].[none:state:nk]</field>
            <field>[federated.1t98oyw1pjvaki15sbs4k0qswgn4].[sum:latitude:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D99A2739-ED17-4A79-BF68-1ECE0161D09D}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:longitude:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:latitude:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:city:nk]</field>
                  <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:latitude:qk]</field>
                  <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:longitude:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Broomall&quot;</value>
                <value>39.981926899999998</value>
                <value>-75.363336899999993</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.14zut8l16rbtr21bqsz5x0jdjm1o].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA64AF94-0613-49EB-A011-3E867BF655A2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      DoVp4ZKWywAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
